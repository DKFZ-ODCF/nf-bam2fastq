# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  integration-test:
    resource_class: medium
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: condaforge/mambaforge:4.11.0-0
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-nextflow-env-{{ .Branch }}-{{ checksum "test-environment.yml" }}
      - restore_cache:
          keys:
            - v1-job-env-{{ .Branch }}-{{ checksum "task-environment.yml" }}
      - run:
          name: "run integration tests"
          command: "test/test1.sh test-results/ mamba nextflowEnv/"
      - save_cache:
          key: v1-nextflow-env-{{ .Branch }}-{{ checksum "test-environment.yml" }}
          paths:
            - nextflowEnv/
      - save_cache:
          key: v1-job-env-{{ .Branch }}-{{ checksum "task-environment.yml" }}
          paths:
            - cache/conda/

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  test-workflow:
    jobs:
      - integration-test
